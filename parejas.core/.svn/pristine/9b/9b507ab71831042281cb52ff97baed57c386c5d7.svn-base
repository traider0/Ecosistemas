package parejas.persistencia;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.sql.DataSource;

import org.apache.commons.dbcp.BasicDataSource;

import parejas.modelo.Persona;

public class PersonaDaoJDBCImpl implements PersonaDao {
	private DataSource dataSource;

	public PersonaDaoJDBCImpl() {
	}

	public PersonaDaoJDBCImpl(DataSource dataSource) {
		super();
		this.dataSource = dataSource;
	}

	@Override
	public void guardar(Persona persona) {
		Connection cn = null;
		try {
			cn = dataSource.getConnection();
			PreparedStatement pst = cn
					.prepareStatement("insert into personas values(?,?,?,?,?)");
			pst.setLong(1, persona.getId());
			pst.setString(2, persona.getNombre());
			pst.setInt(3, persona.getEdad());
			pst.setFloat(4, persona.getAltura());
			pst.setString(5, Character.toString(persona.getSexo()));
			pst.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				cn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}

	}

	@Override
	public void borrar(Persona persona) {
		// JAVA 7 autocloseable resourses + jdbc 4.0
		// ojo con el cierre de los resulset y prepared
		try (Connection cn = dataSource.getConnection()) {
			PreparedStatement pst = cn
					.prepareStatement("delete from personas where id=?");
			pst.setLong(1, persona.getId());
			pst.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public Persona buscar(Long id) {
		Persona persona = null;
		// JAVA 7 autocloseable resourses + jdbc 4.0
		// ojo con el cierre de los resulset y prepared
		try (Connection cn = dataSource.getConnection()) {
			PreparedStatement pst = cn
					.prepareStatement("select * from personas where id=?");
			pst.setLong(1, id);
			ResultSet rs = pst.executeQuery();
			if(rs.next()){
			  persona=fila2Persona(rs);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return persona;
	}

	@Override
	public List<Persona> listar() {
		List<Persona> personas = new ArrayList<Persona>();
		// JAVA 7 autocloseable resourses + jdbc 4.0
		// ojo con el cierre de los resulset y prepared
		try (Connection cn = dataSource.getConnection()) {
			PreparedStatement pst = cn
					.prepareStatement("select * from personas");
			ResultSet rs = pst.executeQuery();
			while(rs.next()){
			  personas.add(fila2Persona(rs));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return personas;
	}

	private Persona fila2Persona(ResultSet rs) throws SQLException {
		return new Persona(rs.getLong("id"),
			rs.getString("nombre"),rs.getInt("edad"),
			rs.getFloat("altura"),rs.getString("sexo").toUpperCase().charAt(0));
	}

	public DataSource getDataSource() {
		return dataSource;
	}

	public void setDataSource(DataSource dataSource) {
		this.dataSource = dataSource;
	}

}
